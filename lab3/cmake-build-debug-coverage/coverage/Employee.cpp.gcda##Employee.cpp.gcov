        -:    0:Source:D:/BSUIR/course2/PPOIS/lab3/salary_lib/Employee.cpp
        -:    0:Graph:D:\BSUIR\course2\PPOIS\lab3\cmake-build-debug-coverage\salary_lib\CMakeFiles\salary_lib.dir\Employee.cpp.gcno
        -:    0:Data:D:\BSUIR\course2\PPOIS\lab3\cmake-build-debug-coverage\salary_lib\CMakeFiles\salary_lib.dir\Employee.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "Employee.h"
        -:    2:#include "Project.h"
        -:    3:
       31:    4:Employee::Employee(int id, const std::string& first, const std::string& last, const std::string& pos, double rate, const ContactInfo& contactInfo, const Address& address)
       31:    5:    : ID(id), firstName(first), lastName(last), position(pos), hourlyRate(rate), hoursWorked(0), salary(0), contactInfo(contactInfo), address(address) {}
        -:    6:
       13:    7:double Employee::calculateSalary() {
       13:    8:    salary = hourlyRate * hoursWorked;
       13:    9:    return salary;
        -:   10:}
        -:   11:
       11:   12:void Employee::updateHoursWorked(int hours) {
       11:   13:    hoursWorked = hours;
       11:   14:}
        -:   15:
        6:   16:int Employee::getID() const { return ID; }
       11:   17:std::string Employee::getFirstName() const { return firstName; }
        6:   18:std::string Employee::getLastName() const { return lastName; }
        2:   19:std::string Employee::getPosition() const { return position; }
        2:   20:double Employee::getHourlyRate() const { return hourlyRate; }
        1:   21:int Employee::getHoursWorked() const { return hoursWorked; }
        1:   22:double Employee::getSalary() const { return salary; }
        -:   23:
        1:   24:void Employee::addProject(Project* project) {
        1:   25:    projects.push_back(project);
        1:   26:}
        -:   27:
        2:   28:const std::vector<Project*>& Employee::getProjects() const {
        2:   29:    return projects;
        -:   30:}
        -:   31:
        1:   32:void Employee::setContactInfo(const ContactInfo& contactInfo) {
        1:   33:    this->contactInfo = contactInfo;
        1:   34:}
        -:   35:
        1:   36:void Employee::setAddress(const Address& address) {
        1:   37:    this->address = address;
        1:   38:}
        -:   39:
        6:   40:ContactInfo Employee::getContactInfo() const {
        6:   41:    return contactInfo;
        -:   42:}
        -:   43:
        9:   44:Address Employee::getAddress() const {
        9:   45:    return address;
        -:   46:}
