        -:    0:Source:D:/BSUIR/course2/PPOIS/lab3/salary_lib/Employee.h
        -:    0:Graph:D:\BSUIR\course2\PPOIS\lab3\cmake-build-debug-coverage\salary_lib\CMakeFiles\salary_lib.dir\Employee.cpp.gcno
        -:    0:Data:D:\BSUIR\course2\PPOIS\lab3\cmake-build-debug-coverage\salary_lib\CMakeFiles\salary_lib.dir\Employee.cpp.gcda
        -:    0:Runs:1
        -:    1:#ifndef EMPLOYEE_H
        -:    2:#define EMPLOYEE_H
        -:    3:
        -:    4:#include <string>
        -:    5:#include <vector>
        -:    6:#include "ContactInfo.h"
        -:    7:#include "Address.h"
        -:    8:
        -:    9:class Project; // Forward declaration
        -:   10:
        -:   11:class Employee {
        -:   12:public:
        -:   13:    Employee(int id, const std::string& first, const std::string& last, const std::string& pos, double rate, const ContactInfo& contactInfo, const Address& address);
    #####:   14:    virtual ~Employee() = default;
------------------
_ZN8EmployeeD0Ev:
    #####:   14:    virtual ~Employee() = default;
------------------
_ZN8EmployeeD1Ev:
    #####:   14:    virtual ~Employee() = default;
------------------
        -:   15:
        -:   16:    virtual double calculateSalary();
        -:   17:    void updateHoursWorked(int hours);
        -:   18:
        -:   19:    int getID() const;
        -:   20:    std::string getFirstName() const;
        -:   21:    std::string getLastName() const;
        -:   22:    std::string getPosition() const;
        -:   23:    double getHourlyRate() const;
        -:   24:    int getHoursWorked() const;
        -:   25:    double getSalary() const;
        -:   26:
        -:   27:    void addProject(Project* project);
        -:   28:    const std::vector<Project*>& getProjects() const;
        -:   29:
        -:   30:    // ContactInfo and Address
        -:   31:    void setContactInfo(const ContactInfo& contactInfo);
        -:   32:    void setAddress(const Address& address);
        -:   33:    ContactInfo getContactInfo() const;
        -:   34:    Address getAddress() const;
        -:   35:
        -:   36:protected:
        -:   37:    int ID;
        -:   38:    std::string firstName;
        -:   39:    std::string lastName;
        -:   40:    std::string position;
        -:   41:    double hourlyRate;
        -:   42:    int hoursWorked;
        -:   43:    double salary;
        -:   44:    std::vector<Project*> projects; // Ассоциация с проектами
        -:   45:
        -:   46:    ContactInfo contactInfo; // Ассоциация с контактной информацией
        -:   47:    Address address; // Ассоциация с адресом
        -:   48:};
        -:   49:
        -:   50:#endif // EMPLOYEE_H
