        -:    0:Source:D:/BSUIR/course2/PPOIS/lab3/Google_tests/Project_TEST.cpp
        -:    0:Graph:D:\BSUIR\course2\PPOIS\lab3\cmake-build-debug-coverage\Google_tests\CMakeFiles\Google_Tests_run.dir\Project_TEST.cpp.gcno
        -:    0:Data:D:\BSUIR\course2\PPOIS\lab3\cmake-build-debug-coverage\Google_tests\CMakeFiles\Google_Tests_run.dir\Project_TEST.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <gtest/gtest.h>
        -:    2:#include "Project.h"
        -:    3:#include "Task.h"
        -:    4:#include "Employee.h"
        -:    5:#include "ContactInfo.h"
        -:    6:#include "Address.h"
        -:    7:
        4:    8:TEST(ProjectTest, ConstructorTest) {
        1:    9:    Project project("New Project");
        -:   10:
       1*:   11:    EXPECT_EQ(project.getName(), "New Project");
        1:   12:}
------------------
_ZN32ProjectTest_ConstructorTest_TestC1Ev:
        1:    8:TEST(ProjectTest, ConstructorTest) {
------------------
_ZN32ProjectTest_ConstructorTest_TestD0Ev:
        1:    8:TEST(ProjectTest, ConstructorTest) {
------------------
_ZN32ProjectTest_ConstructorTest_TestD1Ev:
        1:    8:TEST(ProjectTest, ConstructorTest) {
------------------
_ZN32ProjectTest_ConstructorTest_Test8TestBodyEv:
        1:    8:TEST(ProjectTest, ConstructorTest) {
        1:    9:    Project project("New Project");
        -:   10:
       1*:   11:    EXPECT_EQ(project.getName(), "New Project");
        1:   12:}
------------------
        -:   13:
        4:   14:TEST(ProjectTest, AddAndRemoveTaskTest) {
        2:   15:    Project project("New Project");
        4:   16:    Task task1("Task 1", "2024-11-30");
        3:   17:    Task task2("Task 2", "2024-12-15");
        -:   18:
        1:   19:    project.addTask(&task1);
        1:   20:    project.addTask(&task2);
       1*:   21:    EXPECT_EQ(project.getTasks().size(), 2);
        -:   22:
        1:   23:    project.removeTask("Task 1");
       1*:   24:    EXPECT_EQ(project.getTasks().size(), 1);
       1*:   25:    EXPECT_EQ(project.getTasks()[0]->getDescription(), "Task 2");
        1:   26:}
------------------
_ZN37ProjectTest_AddAndRemoveTaskTest_TestC1Ev:
        1:   14:TEST(ProjectTest, AddAndRemoveTaskTest) {
------------------
_ZN37ProjectTest_AddAndRemoveTaskTest_TestD0Ev:
        1:   14:TEST(ProjectTest, AddAndRemoveTaskTest) {
------------------
_ZN37ProjectTest_AddAndRemoveTaskTest_TestD1Ev:
        1:   14:TEST(ProjectTest, AddAndRemoveTaskTest) {
------------------
_ZN37ProjectTest_AddAndRemoveTaskTest_Test8TestBodyEv:
        1:   14:TEST(ProjectTest, AddAndRemoveTaskTest) {
        2:   15:    Project project("New Project");
        4:   16:    Task task1("Task 1", "2024-11-30");
        3:   17:    Task task2("Task 2", "2024-12-15");
        -:   18:
        1:   19:    project.addTask(&task1);
        1:   20:    project.addTask(&task2);
       1*:   21:    EXPECT_EQ(project.getTasks().size(), 2);
        -:   22:
        1:   23:    project.removeTask("Task 1");
       1*:   24:    EXPECT_EQ(project.getTasks().size(), 1);
       1*:   25:    EXPECT_EQ(project.getTasks()[0]->getDescription(), "Task 2");
        1:   26:}
------------------
        -:   27:
        4:   28:TEST(ProjectTest, AddAndRemoveEmployeeTest) {
        2:   29:    Project project("New Project");
        4:   30:    ContactInfo contact("123-456-7890", "john.doe@example.com");
        4:   31:    Address address("Minsk", "Lenina", 10);
        6:   32:    Employee emp1(1, "John", "Doe", "Developer", 50, contact, address);
       13:   33:    Employee emp2(2, "Jane", "Smith", "Designer", 45, ContactInfo("098-765-4321", "jane.smith@example.com"), Address("Minsk", "Pushkina", 15));
        -:   34:
        1:   35:    project.addEmployee(&emp1);
        1:   36:    project.addEmployee(&emp2);
       1*:   37:    EXPECT_EQ(project.getEmployees().size(), 2);
        -:   38:
        1:   39:    project.removeEmployee(1);
       1*:   40:    EXPECT_EQ(project.getEmployees().size(), 1);
       1*:   41:    EXPECT_EQ(project.getEmployees()[0]->getFirstName(), "Jane");
        1:   42:}
------------------
_ZN41ProjectTest_AddAndRemoveEmployeeTest_TestC1Ev:
        1:   28:TEST(ProjectTest, AddAndRemoveEmployeeTest) {
------------------
_ZN41ProjectTest_AddAndRemoveEmployeeTest_TestD0Ev:
        1:   28:TEST(ProjectTest, AddAndRemoveEmployeeTest) {
------------------
_ZN41ProjectTest_AddAndRemoveEmployeeTest_TestD1Ev:
        1:   28:TEST(ProjectTest, AddAndRemoveEmployeeTest) {
------------------
_ZN41ProjectTest_AddAndRemoveEmployeeTest_Test8TestBodyEv:
        1:   28:TEST(ProjectTest, AddAndRemoveEmployeeTest) {
        2:   29:    Project project("New Project");
        4:   30:    ContactInfo contact("123-456-7890", "john.doe@example.com");
        4:   31:    Address address("Minsk", "Lenina", 10);
        6:   32:    Employee emp1(1, "John", "Doe", "Developer", 50, contact, address);
       13:   33:    Employee emp2(2, "Jane", "Smith", "Designer", 45, ContactInfo("098-765-4321", "jane.smith@example.com"), Address("Minsk", "Pushkina", 15));
        -:   34:
        1:   35:    project.addEmployee(&emp1);
        1:   36:    project.addEmployee(&emp2);
       1*:   37:    EXPECT_EQ(project.getEmployees().size(), 2);
        -:   38:
        1:   39:    project.removeEmployee(1);
       1*:   40:    EXPECT_EQ(project.getEmployees().size(), 1);
       1*:   41:    EXPECT_EQ(project.getEmployees()[0]->getFirstName(), "Jane");
        1:   42:}
------------------
        -:   43:
        4:   44:TEST(ProjectTest, ShowProjectDetailsTest) {
        2:   45:    Project project("New Project");
        4:   46:    Task task1("Task 1", "2024-11-30");
        4:   47:    Task task2("Task 2", "2024-12-15");
        4:   48:    ContactInfo contact("123-456-7890", "john.doe@example.com");
        4:   49:    Address address("Minsk", "Lenina", 10);
        6:   50:    Employee emp1(1, "John", "Doe", "Developer", 50, contact, address);
       13:   51:    Employee emp2(2, "Jane", "Smith", "Designer", 45, ContactInfo("098-765-4321", "jane.smith@example.com"), Address("Minsk", "Pushkina", 15));
        -:   52:
        1:   53:    project.addTask(&task1);
        1:   54:    project.addTask(&task2);
        1:   55:    project.addEmployee(&emp1);
        1:   56:    project.addEmployee(&emp2);
        -:   57:
        -:   58:    // Перехват стандартного вывода
        1:   59:    testing::internal::CaptureStdout();
        1:   60:    project.showProjectDetails();
        1:   61:    std::string output = testing::internal::GetCapturedStdout();
        -:   62:
        -:   63:    std::string expectedOutput =
        -:   64:        "Project: New Project\n"
        -:   65:        "Tasks:\n"
        -:   66:        "- Task 1 (Due: 2024-11-30, Status: Not Completed)\n"
        -:   67:        "- Task 2 (Due: 2024-12-15, Status: Not Completed)\n"
        -:   68:        "Employees:\n"
        -:   69:        "- John Doe\n"
        1:   70:        "- Jane Smith\n";
        -:   71:
       1*:   72:    EXPECT_EQ(output, expectedOutput);
        1:   73:}
------------------
_ZN39ProjectTest_ShowProjectDetailsTest_TestC1Ev:
        1:   44:TEST(ProjectTest, ShowProjectDetailsTest) {
------------------
_ZN39ProjectTest_ShowProjectDetailsTest_TestD0Ev:
        1:   44:TEST(ProjectTest, ShowProjectDetailsTest) {
------------------
_ZN39ProjectTest_ShowProjectDetailsTest_TestD1Ev:
        1:   44:TEST(ProjectTest, ShowProjectDetailsTest) {
------------------
_ZN39ProjectTest_ShowProjectDetailsTest_Test8TestBodyEv:
        1:   44:TEST(ProjectTest, ShowProjectDetailsTest) {
        2:   45:    Project project("New Project");
        4:   46:    Task task1("Task 1", "2024-11-30");
        4:   47:    Task task2("Task 2", "2024-12-15");
        4:   48:    ContactInfo contact("123-456-7890", "john.doe@example.com");
        4:   49:    Address address("Minsk", "Lenina", 10);
        6:   50:    Employee emp1(1, "John", "Doe", "Developer", 50, contact, address);
       13:   51:    Employee emp2(2, "Jane", "Smith", "Designer", 45, ContactInfo("098-765-4321", "jane.smith@example.com"), Address("Minsk", "Pushkina", 15));
        -:   52:
        1:   53:    project.addTask(&task1);
        1:   54:    project.addTask(&task2);
        1:   55:    project.addEmployee(&emp1);
        1:   56:    project.addEmployee(&emp2);
        -:   57:
        -:   58:    // Перехват стандартного вывода
        1:   59:    testing::internal::CaptureStdout();
        1:   60:    project.showProjectDetails();
        1:   61:    std::string output = testing::internal::GetCapturedStdout();
        -:   62:
        -:   63:    std::string expectedOutput =
        -:   64:        "Project: New Project\n"
        -:   65:        "Tasks:\n"
        -:   66:        "- Task 1 (Due: 2024-11-30, Status: Not Completed)\n"
        -:   67:        "- Task 2 (Due: 2024-12-15, Status: Not Completed)\n"
        -:   68:        "Employees:\n"
        -:   69:        "- John Doe\n"
        1:   70:        "- Jane Smith\n";
        -:   71:
       1*:   72:    EXPECT_EQ(output, expectedOutput);
        1:   73:}
------------------
        -:   74:
